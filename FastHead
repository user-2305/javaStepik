public class Main extends JFrame {

    public static void main(String[] args) throws IOException {

        new MyFrame();
    }

}

//ОСНОВНАЯ ПРОГРАММА
public class MyFrame extends JFrame implements KeyListener {
    @Override
    public void keyTyped(KeyEvent e) {
        int thisChange=e.isShiftDown()?speed*2:speed;//если нажата shift, то двигаемся вдвое быстрее
        switch (e.getKeyCode()){//делаем проверку на границы формы, пользуясь реальным размером окна, а не первоначально заданным, а также заданным смещением, чтобы вписаться в panel
            case ('a'):
                if (label.getX()-thisChange>=0)//проверяем, вписываемся ли в окно, или надо будет перейти его границу
                    label.setLocation(label.getX()-thisChange,label.getY());
                else {//если переходим границу, то проверяем, нажат ли шифт (двойная скорость) и находится ли картинка на расстоянии менее себя от границы
                    if (e.isShiftDown() && label.getX() <= label.getWidth())
                        label.setLocation((int) this.getContentPane().getSize().getWidth() - label.getWidth()*2 - 5, label.getY());//если да, то к ставим картинку не просто на противоположенную границу, а еще на плюс картинку
                    else
                        label.setLocation((int) this.getContentPane().getSize().getWidth() - label.getWidth() - 5, label.getY());//если нет то ставим картинку возле противоположенной границы
                }
                break;
            case ('d'):
                if (label.getX()+thisChange<(int) this.getContentPane().getSize().getWidth()-label.getWidth())
                    label.setLocation(label.getX()+thisChange,label.getY());
                else {
                    if (e.isShiftDown()&&this.getContentPane().getSize().getWidth()-label.getX()<=label.getWidth()*2)
                        label.setLocation(5+label.getWidth(), label.getY());
                    else
                        label.setLocation(5, label.getY());
                }
                break;
            case ('w'):
                if (label.getY()-thisChange>=0)
                    label.setLocation(label.getX(),label.getY()-thisChange);
                else {
                    if (e.isShiftDown() && label.getY() <= label.getHeight())
                        label.setLocation(label.getX(), (int) this.getContentPane().getSize().getHeight() - label.getHeight()*2 + 5);
                    else
                        label.setLocation(label.getX(), (int) this.getContentPane().getSize().getHeight() - label.getHeight() + 5);
                }
                break;
            case ('s'):
                if (label.getY()+thisChange<(int) this.getContentPane().getSize().getHeight()-label.getHeight())
                    label.setLocation(label.getX(),label.getY()+thisChange);
                else {
                    if (e.isShiftDown()&&this.getContentPane().getSize().getHeight()-label.getY()<=label.getHeight()*2)
                        label.setLocation(label.getX(), 5+label.getHeight());
                    else
                        label.setLocation(label.getX(), 5);
                }
                break;
        }
    }

    @Override
    public void keyPressed(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {
        System.out.println("Released: "+e.getKeyChar());
        System.out.println("Code: " + e.getKeyCode());
    }

    JLabel label;
    static int width = 800, height = 600;//размеры окна
    private int speed=20;
    MyFrame() throws IOException {

        this.setVisible(true); // окошко
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //для его закрытия
        this.setTitle("Пикассо");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setBounds(dim.width / 2 - width / 2, dim.height / 2 - height / 2, width, height + 30);
        this.addKeyListener(this);

        BufferedImage image = ImageIO.read(new URL("https://tgram.ru/wiki/stickers/img/rmrick/png/6.png"));//скачиваем картинку
        JPanel panel = new JPanel (new FlowLayout(FlowLayout.LEFT));//создаем панель, чтобы ей отлавливать события клавиатуры, ставим ее слева
        panel.setFocusable(true);//делаем у панели возможность принимать фокус, иначе она не сможет отловить события клавиатуры
        label = new JLabel(new ImageIcon(image),JLabel.RIGHT);//создаем объект слева
        panel.add(label, BorderLayout.NORTH);//добавляем на панель
        this.add(panel);//добавляем панель на форму

    }
}
